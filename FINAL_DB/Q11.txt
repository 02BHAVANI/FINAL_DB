DELIMITER //

CREATE FUNCTION CalculateTotalSalary(hourly_wage DECIMAL(10, 2), hours_worked INT)
RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE total_salary DECIMAL(10, 2);

    -- Calculate total salary
    SET total_salary = hourly_wage * hours_worked;

    RETURN total_salary;
END //
DELIMITER ;

SELECT CalculateTotalSalary(15.50, 40) AS 'Total Salary';


b

CREATE TABLE employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    salary DECIMAL(10, 2)
);
CREATE TABLE employee_audit (
    audit_id INT AUTO_INCREMENT PRIMARY KEY,
    emp_id INT,
    old_salary DECIMAL(10, 2),
    new_salary DECIMAL(10, 2),
    change_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DELIMITER //

CREATE TRIGGER after_salary_update
AFTER UPDATE ON employee
FOR EACH ROW
BEGIN
    IF OLD.salary <> NEW.salary THEN
        INSERT INTO employee_audit (emp_id, old_salary, new_salary)
        VALUES (OLD.emp_id, OLD.salary, NEW.salary);
    END IF;
END //
DELIMITER ;



SELECT * FROM employee_audit;
SELECT * FROM employee;
-- Inserting initial data into the employee table
INSERT INTO employee (emp_id, emp_name, salary)
VALUES
    (1, 'John Doe', 50000.00),
    (2, 'Jane Smith', 60000.00),
    (3, 'Alice Johnson', 75000.00);

-- Updating the salary of an employee (e.g., emp_id = 1)
UPDATE employee
SET salary = 55000.00
WHERE emp_id = 1;
-- Viewing the records in the employee_audit table
SELECT * FROM employee_audit;